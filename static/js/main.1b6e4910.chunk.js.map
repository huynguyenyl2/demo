{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","LocationMarker","useState","position","setPosition","map","useMapEvents","click","locate","locationfound","e","latlng","flyTo","getZoom","Marker","Popup","className","MapContainer","center","lat","lng","zoom","scrollWheelZoom","TileLayer","attribution","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA2DeA,MAjDf,WAaE,SAASC,IAAkB,IAAD,EACQC,mBAAS,MADjB,mBACjBC,EADiB,KACPC,EADO,KAElBC,EAAMC,YAAa,CACvBC,MADuB,WAErBF,EAAIG,UAENC,cAJuB,SAITC,GACZN,EAAYM,EAAEC,QACdN,EAAIO,MAAMF,EAAEC,OAAQN,EAAIQ,cAI5B,OAAoB,OAAbV,EAAoB,KACzB,cAACW,EAAA,EAAD,CAAQX,SAAUA,EAAlB,SACE,cAACY,EAAA,EAAD,6BAIN,OACE,qBAAKC,UAAU,MAAf,SAEE,eAACC,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAK,OAAQC,KAAM,KAC7BC,KAAM,GACNC,iBAAiB,EAHnB,UAKE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACxB,EAAD,UCzCOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b6e4910.chunk.js","sourcesContent":["import { React, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  useMapEvents,\n} from \"react-leaflet\";\n\nfunction App() {\n  // const [location, setLocation] = useState([51.505, -0.09]);\n  // const center = [51.505, -0.09];\n  // const fillBlueOptions = { fillColor: \"blue\" };\n  // const redOptions = { color: \"red\" };\n  // const myRef = useRef(null);\n  // function handleClick() {\n  //   setLocation([21.180292, 105.54718]);\n  //   // myRef.current.notice();\n  //   // const map = useMap();\n  //   // map.flyTo(location, 100);\n  // }\n\n  function LocationMarker() {\n    const [position, setPosition] = useState(null);\n    const map = useMapEvents({\n      click() {\n        map.locate();\n      },\n      locationfound(e) {\n        setPosition(e.latlng);\n        map.flyTo(e.latlng, map.getZoom());\n      },\n    });\n\n    return position === null ? null : (\n      <Marker position={position}>\n        <Popup>You are here</Popup>\n      </Marker>\n    );\n  }\n  return (\n    <div className=\"App\">\n      {/* <button onClick={handleClick}>Huy</button> */}\n      <MapContainer\n        center={{ lat: 51.505, lng: -0.09 }}\n        zoom={13}\n        scrollWheelZoom={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <LocationMarker />\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}